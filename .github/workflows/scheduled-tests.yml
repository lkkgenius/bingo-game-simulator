name: Scheduled Tests

on:
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  comprehensive-test:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g playwright
        npx playwright install ${{ matrix.browser }}
        npm install -g http-server
        
    - name: Start server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run cross-browser tests
      run: |
        echo "Running tests on ${{ matrix.browser }}..."
        npx playwright test playwright-e2e.test.js --project=${{ matrix.browser }} || true
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.browser }}
        path: |
          playwright-report/
          test-results/
          
  accessibility-test:
    name: Accessibility Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g @axe-core/cli
        npm install -g http-server
        
    - name: Start server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run accessibility tests
      run: |
        echo "Running accessibility tests..."
        axe http://localhost:8080 --exit || true
        
  mobile-performance:
    name: Mobile Performance Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install -g lighthouse
        npm install -g http-server
        
    - name: Start server
      run: |
        http-server . -p 8080 &
        sleep 5
        
    - name: Run mobile performance audit
      run: |
        echo "Running mobile performance audit..."
        lighthouse http://localhost:8080 --preset=perf --form-factor=mobile --output=json --output-path=mobile-lighthouse.json --chrome-flags="--headless --no-sandbox" || true
        
        if [ -f mobile-lighthouse.json ]; then
          node -e "
            const report = JSON.parse(require('fs').readFileSync('mobile-lighthouse.json', 'utf8'));
            const performance = report.lhr.categories.performance.score * 100;
            console.log('Mobile Performance Score:', performance);
          "
        fi
        
    - name: Upload mobile performance report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: mobile-lighthouse-report
        path: mobile-lighthouse.json